{"version":3,"sources":["helpers/main.js","App.js","index.js"],"names":["json","require","traitfile","Combinatorics","rewriteJSON","arr","res","champ","champion","cost","traits","module","exports","createCombination","obj","trait","push","createObj","index","Object","keys","key","cmb","combination","a","next","createComposition","length","i","temp","comp","y","temp2","uniq","Set","traitCheck","teamArr","champObj","traitsets","name","sets","set","traitJSON","team","total","num","synergies","sort","b","traitJson","App","useState","synergyCount","setSynergyCount","choice","setChoice","setTeam","className","map","numOfTraits","htmlFor","value","options","onChange","e","prevState","handleChange","placeholder","onClick","array","teams","_","slice","createTeam","style","color","textAlign","marginBottom","join","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3c6a39e.chunk.js","sourcesContent":["let json = require('./champions');\nlet traitfile = require('./traits');\nconst Combinatorics = require('js-combinatorics');\n\nlet traitJSON = arr => {\n  let res = {};\n  for (let trait of arr) {\n    res[trait.name] = {};\n    for (let set of trait.sets) {\n      res[trait.name][set] = 1;\n    }\n  }\n  return res;\n};\n\nlet traitCheck = arr => {\n  let res = {};\n  let teamArr = [];\n  let champObj = rewriteJSON(json);\n  let traitsets = traitJSON(traitfile);\n  for (let team of arr) {\n    let total = 0;\n    for (let champ of team) {\n      for (let trait of champObj[champ].traits) {\n        res[trait] = res[trait] + 1 || 1;\n      }\n    }\n    for (let key in res) {\n      let num = Object.keys(traitsets[key]);\n      if (res[key] >= num[0]) {\n        total += 1;\n      }\n    }\n    teamArr.push([{ team: team, traits: res, synergies: total }]);\n    res = {};\n  }\n  return teamArr.sort((a, b) => b[0].synergies - a[0].synergies);\n};\n\nlet rewriteJSON = arr => {\n  let res = {};\n  for (let champ of arr) {\n    res[champ.champion] = { cost: champ.cost, traits: champ.traits };\n  }\n  return res;\n};\n\nlet createObj = arr => {\n  let res = {};\n  for (let champ of json) {\n    for (let trait of champ.traits) {\n      if (res[trait]) {\n        res[trait].push(champ.champion);\n      } else {\n        res[trait] = [champ.champion];\n      }\n    }\n  }\n  return res;\n};\n\nconst createCombination = obj => {\n  let traits = createObj(json);\n  let arr = [];\n  let index = 0;\n  for (let key of Object.keys(obj)) {\n    arr.push([]);\n    let cmb = Combinatorics.combination(traits[key], obj[key]);\n    let a = cmb;\n    while ((a = cmb.next())) arr[index].push(a);\n    index += 1;\n  }\n  return arr;\n};\n\nconst createComposition = arr => {\n  let length = arr.length;\n  for (let i = 0; i < length - 1; i++) {\n    let temp = [];\n    for (let comp of arr[i]) {\n      for (let y = 0; y < arr[i + 1].length; y++) {\n        let temp2 = [...comp, ...arr[i + 1][y]];\n        let uniq = [...new Set(temp2)];\n        temp.push(uniq);\n      }\n      arr[i + 1] = temp;\n    }\n    arr[i + 1] = temp;\n  }\n  return arr[arr.length - 1];\n};\n\nmodule.exports = { createCombination, createComposition, traitCheck };\n","import React, { useState } from 'react';\nimport './App.css';\nimport Select from 'react-select';\nconst traitJson = require('./traits.json');\nconst {\n  createCombination,\n  createComposition,\n  traitCheck\n} = require('./helpers/main');\n\nfunction App() {\n  const [synergyCount, setSynergyCount] = useState(0);\n  const [choice, setChoice] = useState({});\n  const [team, setTeam] = useState();\n\n  function createTeam() {\n    const array = createCombination(choice);\n    const teams = createComposition(array);\n    const _ = traitCheck(teams).slice(0, 10);\n\n    setTeam(_);\n  }\n\n  function handleChange(e, name) {\n    setSynergyCount(synergyCount + 1);\n    //If synergy count is greater than 9? Do something\n    setChoice(prevState => ({ ...prevState, [name]: e }));\n  }\n\n  function renderTraitOptions() {\n    return traitJson.map(trait => {\n      const numOfTraits = trait.sets;\n      return (\n        <div className=\"traitOption\">\n          <label htmlFor=\"traitName\">\n            {trait.name}\n            <Select\n              value={trait.name}\n              options={trait.sets}\n              onChange={e => handleChange(e, trait.name)}\n              placeholder=\"Please choose a number\"\n            />\n            <option value=\"\">Please choose a number</option>\n            {numOfTraits.map(num => (\n              <option value={`${num}`}>{num}</option>\n            ))}\n          </label>\n        </div>\n      );\n    });\n  }\n\n  function renderTeam() {\n    return (\n      team &&\n      team.map(array =>\n        array.map(obj => (\n          <div\n            style={{\n              color: 'black',\n              textAlign: 'center',\n              marginBottom: '10px'\n            }}\n          >\n            {obj.team.join(' ')}\n          </div>\n        ))\n      )\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <section className=\"hero-section\">\n        <h1>Team Fighter Tactics Composition Builder</h1>\n        <h3>Total Synergys: {synergyCount}</h3>\n        <section className=\"trait-section\">{renderTraitOptions()}</section>\n      </section>\n\n      <button onClick={() => createTeam()}>Get Team</button>\n\n      <section className=\"team-display\">\n        <h2>Your Team</h2>\n        {renderTeam()}\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}